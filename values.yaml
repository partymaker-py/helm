# Default values for cicdlab-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

kind: Deployment
replicaCount: 1

image:
  repository: registry.gitlab.cicdlab.local
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: {}
  env: {}

imagePullSecrets: []
nameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

livenessProbe:
  path: /health

readinessProbe:
  path: /health

ingress:
  enabled: true
  arena: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 10m
  hosts:
    - host: api.tarkov.help
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: tarkov-secret-tls
     hosts:
       - api.tarkov.help

resources:
  limits:
    cpu: 5500m
    memory: 5Gi
  requests:
    cpu: 4500m
    memory: 2Gi


autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 60
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Pods
        value: 1
        periodSeconds: 1800
    scaleUp:
      stabilizationWindowSeconds: 450
      policies:
      - type: Pods
        value: 1
        periodSeconds: 1800
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  environment: prod

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

tolerations: []

affinity: {}
